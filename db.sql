PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
INSERT INTO "django_migrations" VALUES(1,'contenttypes','0001_initial','2015-05-19 12:25:29.997858');
INSERT INTO "django_migrations" VALUES(2,'auth','0001_initial','2015-05-19 12:25:30.030753');
INSERT INTO "django_migrations" VALUES(3,'admin','0001_initial','2015-05-19 12:25:30.050731');
INSERT INTO "django_migrations" VALUES(4,'contenttypes','0002_remove_content_type_name','2015-05-19 12:25:30.139915');
INSERT INTO "django_migrations" VALUES(5,'auth','0002_alter_permission_name_max_length','2015-05-19 12:25:30.162298');
INSERT INTO "django_migrations" VALUES(6,'auth','0003_alter_user_email_max_length','2015-05-19 12:25:30.186094');
INSERT INTO "django_migrations" VALUES(7,'auth','0004_alter_user_username_opts','2015-05-19 12:25:30.208636');
INSERT INTO "django_migrations" VALUES(8,'auth','0005_alter_user_last_login_null','2015-05-19 12:25:30.233447');
INSERT INTO "django_migrations" VALUES(9,'auth','0006_require_contenttypes_0002','2015-05-19 12:25:30.236053');
INSERT INTO "django_migrations" VALUES(10,'sessions','0001_initial','2015-05-19 12:25:30.247755');
INSERT INTO "django_migrations" VALUES(11,'blog','0001_initial','2015-05-19 12:38:37.944683');
CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE);
CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"), UNIQUE ("group_id", "permission_id"));
CREATE TABLE "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "group_id" integer NOT NULL REFERENCES "auth_group" ("id"), UNIQUE ("user_id", "group_id"));
CREATE TABLE "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id"), "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"), UNIQUE ("user_id", "permission_id"));
CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id"), "user_id" integer NOT NULL REFERENCES "auth_user" ("id"));
INSERT INTO "django_admin_log" VALUES(1,'2015-05-19 12:45:21.588439','1','Post object',1,'',7,1);
INSERT INTO "django_admin_log" VALUES(2,'2015-05-19 12:46:38.082395','2','Post object',1,'',7,1);
INSERT INTO "django_admin_log" VALUES(3,'2015-05-19 12:47:13.807724','3','Post object',1,'',7,1);
CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, UNIQUE ("app_label", "model"));
INSERT INTO "django_content_type" VALUES(1,'admin','logentry');
INSERT INTO "django_content_type" VALUES(2,'auth','permission');
INSERT INTO "django_content_type" VALUES(3,'auth','group');
INSERT INTO "django_content_type" VALUES(4,'auth','user');
INSERT INTO "django_content_type" VALUES(5,'contenttypes','contenttype');
INSERT INTO "django_content_type" VALUES(6,'sessions','session');
INSERT INTO "django_content_type" VALUES(7,'blog','post');
CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id"), "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL, UNIQUE ("content_type_id", "codename"));
INSERT INTO "auth_permission" VALUES(1,1,'add_logentry','Can add log entry');
INSERT INTO "auth_permission" VALUES(2,1,'change_logentry','Can change log entry');
INSERT INTO "auth_permission" VALUES(3,1,'delete_logentry','Can delete log entry');
INSERT INTO "auth_permission" VALUES(4,2,'add_permission','Can add permission');
INSERT INTO "auth_permission" VALUES(5,2,'change_permission','Can change permission');
INSERT INTO "auth_permission" VALUES(6,2,'delete_permission','Can delete permission');
INSERT INTO "auth_permission" VALUES(7,3,'add_group','Can add group');
INSERT INTO "auth_permission" VALUES(8,3,'change_group','Can change group');
INSERT INTO "auth_permission" VALUES(9,3,'delete_group','Can delete group');
INSERT INTO "auth_permission" VALUES(10,4,'add_user','Can add user');
INSERT INTO "auth_permission" VALUES(11,4,'change_user','Can change user');
INSERT INTO "auth_permission" VALUES(12,4,'delete_user','Can delete user');
INSERT INTO "auth_permission" VALUES(13,5,'add_contenttype','Can add content type');
INSERT INTO "auth_permission" VALUES(14,5,'change_contenttype','Can change content type');
INSERT INTO "auth_permission" VALUES(15,5,'delete_contenttype','Can delete content type');
INSERT INTO "auth_permission" VALUES(16,6,'add_session','Can add session');
INSERT INTO "auth_permission" VALUES(17,6,'change_session','Can change session');
INSERT INTO "auth_permission" VALUES(18,6,'delete_session','Can delete session');
INSERT INTO "auth_permission" VALUES(19,7,'add_post','Can add post');
INSERT INTO "auth_permission" VALUES(20,7,'change_post','Can change post');
INSERT INTO "auth_permission" VALUES(21,7,'delete_post','Can delete post');
CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_login" datetime NULL);
INSERT INTO "auth_user" VALUES(1,'pbkdf2_sha256$20000$rEWGzVuCsgaI$rWwJaS6s2zFWUKOUBhAPViOoUHky3deDrqw1W9aFnWg=',1,'titi','','','titilopedada@gmail.com',1,1,'2015-05-19 12:43:19.348554','2015-05-19 12:44:01.919115');
CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
INSERT INTO "django_session" VALUES('l9ka6zgkk46a3q9s4prp88pinzepg26r','NzcyNjg3MjViNTkxZmE5MGFlMjBlNmJjYmQwODViODZmNTE1MjEyNzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3YTIxMmIxMDYxZTY4YzRhYTFmMTE2M2Y5MTI0ODFmZjhlMzg0NzA1In0=','2015-06-02 12:44:01.922929');
CREATE TABLE "blog_post" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(200) NOT NULL, "text" text NOT NULL, "created_date" datetime NOT NULL, "published_date" datetime NULL, "author_id" integer NOT NULL REFERENCES "auth_user" ("id"));
INSERT INTO "blog_post" VALUES(1,'My first post','In order to log in you need to create a superuser - a user which has control over everything on the site. Go back to you command-line and type python manage.py createsuperuser, press enter and type your username (lowercase, no spaces), email address and password when you''re asked for them. Don''t worry that you can''t see the password you''re typing in - that''s how it''s supposed to be. Just type it in and press ''Enter'' to continue. The output should look like this (where username and email should be your own ones):','2015-05-19 12:44:24','2015-05-19 12:44:39',1);
INSERT INTO "blog_post" VALUES(2,'My first post','In order to log in you need to create a superuser - a user which has control over everything on the site. Go back to you command-line and type python manage.py createsuperuser, press enter and type your username (lowercase, no spaces), email address and password when you''re asked for them. Don''t worry that you can''t see the password you''re typing in - that''s how it''s supposed to be. Just type it in and press ''Enter'' to continue. The output should look like this (where username and email should be your own ones):','2015-05-19 12:44:24','2015-05-19 12:44:39',1);
INSERT INTO "blog_post" VALUES(3,'Second Post','In order to log in you need to create a superuser - a user which has control over everything on the site. Go back to you command-line and type python manage.py createsuperuser, press enter and type your username (lowercase, no spaces), email address and password when you''re asked for them. Don''t worry that you can''t see the password you''re typing in - that''s how it''s supposed to be. Just type it in and press ''Enter'' to continue. The output should look like this (where username and email should be your own ones):','2015-05-19 12:46:50',NULL,1);
INSERT INTO "blog_post" VALUES(4,'Sample title','Test','2015-05-19 17:16:21.810671','2015-05-19 18:58:55.749667',1);
DELETE FROM sqlite_sequence;
INSERT INTO "sqlite_sequence" VALUES('django_migrations',11);
INSERT INTO "sqlite_sequence" VALUES('django_content_type',7);
INSERT INTO "sqlite_sequence" VALUES('auth_permission',21);
INSERT INTO "sqlite_sequence" VALUES('auth_user',1);
INSERT INTO "sqlite_sequence" VALUES('blog_post',4);
INSERT INTO "sqlite_sequence" VALUES('django_admin_log',3);
CREATE INDEX "auth_group_permissions_0e939a4f" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_8373b171" ON "auth_group_permissions" ("permission_id");
CREATE INDEX "auth_user_groups_e8701ad4" ON "auth_user_groups" ("user_id");
CREATE INDEX "auth_user_groups_0e939a4f" ON "auth_user_groups" ("group_id");
CREATE INDEX "auth_user_user_permissions_e8701ad4" ON "auth_user_user_permissions" ("user_id");
CREATE INDEX "auth_user_user_permissions_8373b171" ON "auth_user_user_permissions" ("permission_id");
CREATE INDEX "django_admin_log_417f1b1c" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_e8701ad4" ON "django_admin_log" ("user_id");
CREATE INDEX "auth_permission_417f1b1c" ON "auth_permission" ("content_type_id");
CREATE INDEX "django_session_de54fa62" ON "django_session" ("expire_date");
CREATE INDEX "blog_post_4f331e2f" ON "blog_post" ("author_id");
COMMIT;
